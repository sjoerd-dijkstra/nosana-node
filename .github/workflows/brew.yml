name: Build and release Nosana Node brew package

on:
  push:
    tags:
      - v*

jobs:
  build:
    name: Build release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ ubuntu-latest, macos-latest, windows-latest ]
       os: [ ubuntu-latest, macos-latest ]
#        os: [ ubuntu-latest ]

    steps:
      # repo
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      # java
      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      # clojure
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@10.1
        with:
          cli: latest

      # build
      - name: Clojure Uber Build
        run: clojure -X:compile uberjar

      # artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nosana-node-${{ runner.os }}
          path: target/*.jar
          if-no-files-found: error

  release:
    name: Create release
    needs: build
    runs-on: ubuntu-latest
    env:
      release_body_file: body.txt
    outputs:
      new_version: ${{ steps.release-files.outputs.new_version }}
      all_files_sha: ${{ steps.release-files.outputs.all_files_sha }}
    steps:
      # repo
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      # artifact
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v0.4.4
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      # prepare
      - name: Prepare release files
        id: release-files
        run: |
          version=${tag_ref/refs\/tags\//}
          # Create sha256sum for each release file
          mkdir release
          cd artifacts
          for file in */*; do release_name="$(dirname ${file})"; cp "${file}" "../release/${release_name}-${version}"; done
          cd ../release
          for file in *; do sha256sum "${file}" > "${file}.sha256sum"; done
          tar czf all-files-${version}.tar.gz *
          sha256sum all-files-${version}.tar.gz > all-files-${version}.tar.gz.sha256sum
          all_files_sha="$( cat all-files-${version}.tar.gz.sha256sum | cut -f 1 -d ' ' )"
          cd ..
          # Create release text
          cat <<'EOF' > "${release_body_file}"
          ## SHA 256
          EOF
          cd release
          for file in *.sha256sum; do echo "- $(cat "${file}")" >> "../${release_body_file}"; done
          cd ..
          cat <<'EOF' >> "${release_body_file}"
          ## Change log
          EOF
          echo "${change_log}" >> "${release_body_file}"
          echo "::set-output name=new_version::${version}"
          echo "::set-output name=all_files_sha::${all_files_sha}"
        env:
          tag_ref: ${{ github.ref }}
          change_log: ${{ steps.changelog.outputs.changelog }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{ env.release_body_file }}
          files: release/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

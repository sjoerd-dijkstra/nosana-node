name: Build and release Nosana Node brew package

on:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  build:
    name: Build package
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [ ubuntu-latest, macos-latest ]
        os: [ ubuntu-latest ]

    steps:
      # repo
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      # java
      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      # clojure
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@10.1
        with:
          cli: latest

      # build
      - name: Clojure Uber Build
        run: clojure -X:compile uberjar

      # artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nosana-node-${{ runner.os }}
          path: target/*.jar
          if-no-files-found: error

  release:
    name: Release package
    needs: build
    runs-on: ubuntu-latest
    env:
      RELEASE_BODY_FILE: body.txt
    outputs:
      new_version: ${{ steps.release-files.outputs.new_version }}
      all_files_sha: ${{ steps.release-files.outputs.all_files_sha }}
    steps:
      # repo
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      # artifact
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      # build
      - name: Check files
        run: ls artifacts/**/*

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.0.1
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      # prepare release
      - name: Prepare release files
        id: release-files
        run: .github/scripts/prepare-release.sh
        env:
          TAG_REF: ${{ github.ref }}
          CHANGE_LOG: ${{ steps.changelog.outputs.changelog }}

      # build
      - name: Check files
        run: ls release/*

      # release
      - name: Release package
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{ env.RELEASE_BODY_FILE }}
          files: release/*
          draft: false
          prerelease: false
